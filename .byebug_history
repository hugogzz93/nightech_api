c
@service2.errors.messages
@service2.
@service2.errors.messages
c
@service2.valid?
@service2.errors.messages
@service2.errors
continue
@service2.errors.messages
@service2.valid?
@service2.errors
continue
@service2.errors
@service2.valid?
c
reservations
c
reservations
c
reservations.count
reservations.coun
reservations
c
reservations
c
reservations
Reservation.where(date: DateTime.now)
DateTime.now.utf
DateTime.now.iso
DateTime.now
reservations
c
n
reservations.count
reservations
c
n
reservations.where(user_id: current_user.id).count
reservations.where(user_id: current_user.id)
n
reservations.count
reservations
c
reservations.where(user_id: current_user.id)
n
c
n
date
reservations
date
c
Reservation.where(date: DateTime.now.beginning_of_day..DateTime.now.end_of_day)
DateTime.now.beginning_of_day
DateTime.now
Reservation.where(date: DateTime.now..DateTime.now.end_of_day)
Reservation.last.date
date.utc
date
Reservation.last.date.utc
date.utc
Reservation.last.date.end_of_day
date.end_of_day
Reservation.last.date.end_of_day == date.end_of_day
Reservation.where(date: date..date.end_of_day)
Reservation.last.date.end_of_day
Reservation.last.date
Reservation.last
date.end_of_day
date
c
Reservation.by_date(date)
date
Reservation.last.date.utc
Reservation.last.date
date
c
date
Reservation.last.date
Reservation.last.date.utc
Reservation.last.date
DateTime.now.utc
date
DateTime.now
date
DateTime.new
DateTime.now
date
current_user.reservations
current_user
Reservation.all
reservations
c
request.headers["Authorization"]
current_user
date
n
c
request.headers["Authority"]
request["Authority"]
c
request.headers
request["Authority"]
request.headers["Authority"]
request.headers[Authority]
request.headers[:Authority]
request.headers[Authority]
request.headers['Authority']
request.headers['Authorization']
request.headers
current_user
n
request[:Authorization]
request
params
c
n
c
n
c
puts "hello" if !user
puts "hello" if user
if  user
user_email.present?
user
n
user_email
n
c
params[:session][:email]
params[:session]
c
a["email"]
a.email
a[:email]
a = JSON.parse params[:session]
JSON.parse params[:session]
JSON.parse params
json.parse params[:session]
params[:session][:password]
params[:session]
params
c
n
params
c
params
exit
Service.any?
n
Service.any?
n
Service.any?
c
exit
Service.any?
si
n
Service.any?
exit
service.new_record?
Service.all
service.errors.messages
service.errors
service.valid?
service.errors
n
exit
json_response
json_response[:service]
exit
json_response
exit
service.errors
service.valid?
service
n
exit
c
exit
Service.all
service
n
service_params
c
@otherService.table.number
@otherService
n
@table
exit
Service.first
Service.any?
exit
json_response
c
exit
Service.any?
c
errors.any?
errors
c
errors
n
Service.any?
c
Service.any?
exit
service.errors
service.valid?
service
c
n
Service.by_date(date).where(table_id: table.id).any?
errors
n
errors
c
n
errors
n
errors
Service.by_date(date).where(table_id: table.id).any?
table
table.present?
date.present?
Service.by_date(date)
Service.all
exit
service.errors
service.valid?
service_params
exit
json_response
service_response
service_respose
exit
service_response[0]
service_response
exit
service_response[0][:table]
service_response[0]
service_response
exit
service_response
exit
json_response[:services][0]
json_response[:services][0][:table]
json_response[:services][:table]
json_response[:services]
json_response[:service]
exit
@service.table
@service
json_response
json_response[:service]
exit
