c
n
c
n
c
puts "hello" if !user
puts "hello" if user
if  user
user_email.present?
user
n
user_email
n
c
params[:session][:email]
params[:session]
c
a["email"]
a.email
a[:email]
a = JSON.parse params[:session]
JSON.parse params[:session]
JSON.parse params
json.parse params[:session]
params[:session][:password]
params[:session]
params
c
n
params
c
params
exit
Service.any?
n
Service.any?
n
Service.any?
c
exit
Service.any?
si
n
Service.any?
exit
service.new_record?
Service.all
service.errors.messages
service.errors
service.valid?
service.errors
n
exit
json_response
json_response[:service]
exit
json_response
exit
service.errors
service.valid?
service
n
exit
c
exit
Service.all
service
n
service_params
c
@otherService.table.number
@otherService
n
@table
exit
Service.first
Service.any?
exit
json_response
c
exit
Service.any?
c
errors.any?
errors
c
errors
n
Service.any?
c
Service.any?
exit
service.errors
service.valid?
service
c
n
Service.by_date(date).where(table_id: table.id).any?
errors
n
errors
c
n
errors
n
errors
Service.by_date(date).where(table_id: table.id).any?
table
table.present?
date.present?
Service.by_date(date)
Service.all
exit
service.errors
service.valid?
service_params
exit
json_response
service_response
service_respose
exit
service_response[0]
service_response
exit
service_response[0][:table]
service_response[0]
service_response
exit
service_response
exit
json_response[:services][0]
json_response[:services][0][:table]
json_response[:services][:table]
json_response[:services]
json_response[:service]
exit
@service.table
@service
json_response
json_response[:service]
exit
json_response[:services][0]
json_response[:services]
json_response
exit
has_clearance?(current_user, "administrator")
services.count
services
current_user
exit
json_response[:reservations][0][:table]
json_response[:reservations][0]
json_response[:reservations][1]
json_response[:reservations].count
json_response[:reservations]
json_response
c
json_response
exit
reservation_response
exit
@reservation.accepted?
@reservation.reload!
@reservation.reload
@reservation.reload!
@reservation.accepted?
c
n
service.new_record?
n
reservation.status
reservation
exit
service.new_record?
if service
service == Service.first
service
Service.first
Service.all
service.errors
service.valid?
service
n
service
exit
@reservationex
json_response
@reservation
Service.all
c
Service.all
c
Service.all
c
Service.all
c
Service.all
c
Service.all
exit
Service.all
c
@reservation
c
json_response
@reservation
c
@reservation
c
@reservation
exit
Service.all
json_response
exit
json_response
exit
Service.all
Table.all
@table
json_response
exit
json_response
exit
table
exit
table
administrator
exit
Service.by_date(date)
date
Table.all
Service.all
self.errors.messages
self.errors.messages.all
self.errors.messages
self.errors
self.errors.message
self.errors
self.valid?
exit
date
c
date
c
date
c
date
exit
@service
exit
                                                 coordinator: @userexit
FactoryGirl.build :service, administrator: @user,
@service
exit
c
exit
