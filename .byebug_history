abort
current_user.outranks? user
abort
user_response
abort
self.errors.any?
self.errors
self
abort
user.valid?
user.errors.any?
user
c
user
c
user.errors
user.errors.any?
user
n
user
current_user.credentials
user.credentials
user
current_user.credentials
c
current_user.credentials
c
current_user.credentials
c
current_user.credentials
current_user
c
current_user.credentials
user
n
c
user
n
user
abort
user.errors.any?
user.errors
user
n
abort
user.errors.any?
user.errors
user
user.errors.add(:credentials, "Insufficient priviledges")
user.errors.add(:credentials, "Insufficient priviledges") unless creating_user.outranks?(new_user)
user.errors.any?
user.errors
user
n
user
abort
user_response
abort
current_user.can_create?(user_params)
current_user
abort
a
current_user
c
a
c
current_user
c
authentication.current_user
c
authentication.current_user
n
authentication.current_user
c
authentication.current_user
authentication
request
authentication.request
authentication
c
n
nn
authentication
n
authentication.request
authentication
n
authentication
c
request.headers
request
c
a
b = @user
@user
n
a = @user
@user
c
@user_attributes[:email]
@user_attributes
@user_attributes.email
user_response[:email]
user_response
